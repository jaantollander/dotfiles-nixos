# Set prefix key to CTRL+Space
unbind C-b
set -g prefix C-Space

# Remove delay when pressing escape key in tmux
set -s escape-time 0

# Change history limit
set -g history-limit 10000

# Allow using mouse
set -g mouse on

# Use one based indexing
set -g base-index 1
set-window-option -g pane-base-index 1

# Keybinding for seloading tmux
unbind r
bind r source-file $HOME/.tmux.conf \; display "Reloaded tmux conf"

# Split vertically
unbind %
unbind v
bind v split-window -h -c "#{pane_current_path}"

# Split horizontally
unbind '"'
unbind h
bind h split-window -v -c "#{pane_current_path}"

# Switch pane using Vi key bindings
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Rename window
unbind n
bind n command-prompt "rename-window '%%'"

# Create new window
unbind w
bind w new-window -c "#{pane_current_path}"

# Navigate through windows using ALT+k and ALT+j
bind -n M-j previous-window
bind -n M-k next-window

# Vi-style copy-paste
set-window-option -g mode-keys vi

# Begin selection
unbind -T copy-mode-vi Space;
bind -T copy-mode-vi v send-keys -X begin-selection

# Copy selection
unbind -T copy-mode-vi Enter;
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Fix cursor in Neovim
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q' 

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# TODO: disable on server
#bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Design
# bg: background
# fg: foreground

# Panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=red

# Status line
set -g status-justify centre
set -g status-style fg=blue
set -g status-interval 2

# Messaging
set -g message-command-style fg=blue,bg=black

# Window mode
setw -g mode-style bg=green,fg=black

# Window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=white] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] #I #[fg=white]#[bg=cyan] #W "
setw -g window-status-current-style bg=black,fg=yellow,dim
setw -g window-status-style bg=green,fg=black,reverse

# Quiet mode
set-window-option -g monitor-activity off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

# The modes
set-window-option -g clock-mode-colour red
set-window-option -g mode-style fg=red,bg=black,bold

# The panes
set -g pane-border-style bg=black,fg=black
set -g pane-active-border-style fg=blue,bg=brightblack

# The statusbar
set -g status-position bottom
set -g status-style bg=black,fg=yellow,dim

# Right status bar
set -g status-right '#{?client_prefix,#[fg=red]#H ,#[fg=brightwhite,bold]#H }'
set -g status-right-length 50

# Left status bar
set -g status-left ' #[fg=brightwhite,bold]#S'
set -g status-left-length 20

# The window
set-window-option -g window-status-current-style fg=red,bg=brightblack,bold
set-window-option -g window-status-current-format ' #I#[fg=brightwhite]:#[fg=brightwhite]#W#[fg=blue]#F '
set-window-option -g window-status-style fg=magenta,bg=black,none
set-window-option -g window-status-format ' #I#[fg=colour251]:#[fg=colour251]#W#[fg=black]#F '
set-window-option -g window-status-bell-style fg=white,bg=red,bold

# The messages
set -g message-style fg=white,bg=red,bold

